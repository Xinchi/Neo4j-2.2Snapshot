----------------- bestPlan -----------------
plans = 
plans = empty


----------------- bestPlan -----------------
plans = 
plans = empty


----------------- bestPlan -----------------
plans = 
plans = empty


----------------- bestPlan -----------------
plans = 
plans = empty


----------------- bestPlan -----------------
plans = 
################################################################
#org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.NodeByLabelScan
------------------------ DETAILS OF THE ABOVE TREE ------------------------
org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.NodeByLabelScan
NodeByLabelScan(IdName(n),Right(LabelId(20)),Set())
------------------------ END OF DETAILS ------------------------
################################################################

################################################################
#org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.Selection
#-org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.AllNodesScan
------------------------ DETAILS OF THE ABOVE TREE ------------------------
org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.Selection
Selection(ArrayBuffer(HasLabels(Identifier(n),List(LabelName(Event)))),AllNodesScan(IdName(n),Set()))
-org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.AllNodesScan
AllNodesScan(IdName(n),Set())
------------------------ END OF DETAILS ------------------------
################################################################

Return = 

################################################################
#org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.NodeByLabelScan
################################################################

----------------- bestPlan -----------------
plans = 
################################################################
#org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.NodeByLabelScan
------------------------ DETAILS OF THE ABOVE TREE ------------------------
org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.NodeByLabelScan
NodeByLabelScan(IdName(m),Right(LabelId(23)),Set())
------------------------ END OF DETAILS ------------------------
################################################################

################################################################
#org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.Selection
#-org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.AllNodesScan
------------------------ DETAILS OF THE ABOVE TREE ------------------------
org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.Selection
Selection(ArrayBuffer(HasLabels(Identifier(m),List(LabelName(Place)))),AllNodesScan(IdName(m),Set()))
-org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.AllNodesScan
AllNodesScan(IdName(m),Set())
------------------------ END OF DETAILS ------------------------
################################################################

Return = 

################################################################
#org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.NodeByLabelScan
################################################################

------------------------------ ++ ------------------------------
Original CandidateList = 
Added CandidateList = 
------------------------------ ++ ------------------------------
Original CandidateList = 
Added CandidateList = 
------------------------------ ++ ------------------------------
Original CandidateList = 
Added CandidateList = 
------------------------------ ++ ------------------------------
Original CandidateList = 
################################################################
#org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.CartesianProduct
#-org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.NodeByLabelScan
#-org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.NodeByLabelScan
################################################################

Added CandidateList = 
----------------- bestPlan -----------------
plans = 
plans = empty


------------------------------ + ------------------------------
Original CandidateList = 
Added CandidateList = 
################################################################
#org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.CartesianProduct
#-org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.NodeByLabelScan
#-org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.NodeByLabelScan
################################################################

----------------- bestPlan -----------------
plans = 
################################################################
#org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.CartesianProduct
#-org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.NodeByLabelScan
#-org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.NodeByLabelScan
------------------------ DETAILS OF THE ABOVE TREE ------------------------
org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.CartesianProduct
CartesianProduct(NodeByLabelScan(IdName(m),Right(LabelId(23)),Set()),NodeByLabelScan(IdName(n),Right(LabelId(20)),Set()))
-org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.NodeByLabelScan
NodeByLabelScan(IdName(m),Right(LabelId(23)),Set())
-org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.NodeByLabelScan
NodeByLabelScan(IdName(n),Right(LabelId(20)),Set())
------------------------ END OF DETAILS ------------------------
################################################################

Return = 

################################################################
#org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.CartesianProduct
#-org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.NodeByLabelScan
#-org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.NodeByLabelScan
################################################################

------------------------------ ++ ------------------------------
Original CandidateList = 
################################################################
#org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.CartesianProduct
#-org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.NodeByLabelScan
#-org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.NodeByLabelScan
################################################################

Added CandidateList = 
----------------- bestPlan -----------------
plans = 
plans = empty


------------------------------ + ------------------------------
Original CandidateList = 
Added CandidateList = 
################################################################
#org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.CartesianProduct
#-org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.NodeByLabelScan
#-org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.NodeByLabelScan
################################################################

----------------- bestPlan -----------------
plans = 
################################################################
#org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.CartesianProduct
#-org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.NodeByLabelScan
#-org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.NodeByLabelScan
------------------------ DETAILS OF THE ABOVE TREE ------------------------
org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.CartesianProduct
CartesianProduct(NodeByLabelScan(IdName(m),Right(LabelId(23)),Set()),NodeByLabelScan(IdName(n),Right(LabelId(20)),Set()))
-org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.NodeByLabelScan
NodeByLabelScan(IdName(m),Right(LabelId(23)),Set())
-org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.NodeByLabelScan
NodeByLabelScan(IdName(n),Right(LabelId(20)),Set())
------------------------ END OF DETAILS ------------------------
################################################################

Return = 

################################################################
#org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.CartesianProduct
#-org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.NodeByLabelScan
#-org.neo4j.cypher.internal.compiler.v2_2.planner.logical.plans.NodeByLabelScan
################################################################

----------------- bestPlan -----------------
plans = 
plans = empty


